
# Targets: default: Compiles 'grade' program for current architecture
#	   install-shared: Install shared Perl scripts, libraries, 
#			   documentation
#          install-bin:    Install 'grade' program
#	   uninstall-shared: Remove results of install-shared
#	   uninstall-bin:  Remove results of install-bin on this architecture
#	   uninstall:	   Effects of uninstall-shared and uninstall-bin
#          clean:	   Remove unnecessary files created since building
#	   distclean:      Remove things that can be replaced by reconfiguring
#			   and rebuilding.
#	   tar:		   Creates a distributable file grading-$(VERSION).tgz
#			   that is an archive of the files comprising this 
#			   release.  May be used in either the build or
#			   (with -f Makefile.in) in the unconfigured source 
#			   directory.

GZIP = gzip

SOURCE_DIR = @SOURCE_DIR@

LIBDIR = @LIBDIR@
BINDIR = @BINDIR@
SHAREBINDIR = @SHAREBINDIR@
SUIDDIR = @SUIDDIR@
MANDIR = @MANDIR@
DOCDIR = @DOCDIR@

PERL_PROG = @PERL_PROG@
PRCS_PROG = @PRCS_PROG@

# Must be supplied on command line for make ... dist and make ... tar.
DISTDIR = 

INSTALL_SCRIPTS = \
	  add-partners assign-letter-grades \
	  bug-submit check-reader-grades check-register \
	  find-student get-bug \
	  get-partners get-subm get-submissions grade-entries  \
	  init-grading lookat mail-results make-grade-book \
	  make-main-roster make-roster note-submission	\
	  register re-register report-lateness run-tests set-finger-info  \
	  submit test-subm

SUID_SCRIPTS = \
	  copy-submission glookup enter-grades check-missing

SUID_WRAPPER = \
	  Makefile.in README run-as-class-master.c

INSTALL_LIBS = \
	  GradingBase.pl GradingCommon.pl Obscure.pl TestingCommon.pl \
	  acquireDir.pl query.pl GradingHelp.txt

MAN_PAGES = \
	  add-partners.1 assign-letter-grades.1 bug-submit.1  \
	  check-missing.1 check-reader-grades.1 check-register.1 \
	  enter-grades.1 \
	  get-bug.1 get-partners.1 get-subm.1  \
	  get-submissions.1 glookup.1 grade-entries.1 init-grading.1 \
	  lookat.1 mail-results.1 make-grade-book.1 \
	  make-main-roster.1 make-roster.1 note-submission.1 \
	  re-register.1 \
	  register.1 registration.1 report-lateness.1 \
	  run-tests.1 set-finger-info.1 \
	  submit.1 test-subm.1 \
	  grade.1

DOC_PAGES = OVERVIEW TESTING-OVERVIEW

OTHER_DIST = Makefile.in configure TODO ChangeLog README COPYING \
	     RELEASE-NOTES

# $Format: "VERSION = $ReleaseVersion$"$
VERSION = 3.12.4

DISTBASE = grading-$(VERSION)
DISTTAR = $(DISTBASE).tar
DISTTARCOMPRESS = $(DISTBASE).tgz

.PHONY: default install install-bin install-shared \
	uninstall uninstall-bin uninstall-shared \
	clean distclean tar

default:
	cd grade; $(MAKE)

install: 
	echo "Type either 'gmake install-bin' or 'gmake install-shared'"

install-bin: 
	cd grade; $(MAKE) install

# NOTE: configure converts %% => @
install-shared:
	@doinstall () { \
	   from=$$1; to=$$2; mode=$$3; shift 3; \
	   if [ ! -d $$to ]; then mkdir -p $$to; fi; \
	   for f in $$*; do \
	      echo "$$f -> $$to"; \
	      sed -e 's,%%PREFIX%%,$(PREFIX),g' \
		  -e 's,%%BINDIR%%,$(BINDIR),g' \
		  -e 's,%%SHAREBINDIR%%,$(SHAREBINDIR),g' \
		  -e 's,%%SUIDDIR%%,$(SUIDDIR),g' \
		  -e 's,%%LIBDIR%%,$(LIBDIR),g' \
		  -e 's,%%PERL_PROG%%,$(PERL_PROG),g' \
		  -e 's,%%PRCS_PROG%%,$(PRCS_PROG),g' \
		  -e 's,%%VERSION%%,$(VERSION),g' \
		$$from/$$f > $$to/$$f; \
	      chmod $$mode $$to/$$f; \
	   done; \
	}; \
	doinstall $(SOURCE_DIR)/share/bin $(SHAREBINDIR) 755 \
		  $(INSTALL_SCRIPTS); \
	doinstall $(SOURCE_DIR)/share/bin/suid $(SUIDDIR) 755 \
		  $(SUID_SCRIPTS); \
	for p in $(SUID_SCRIPTS); do \
	    rm -f $(SHAREBINDIR)/$$p; \
	    echo "ln -s $(SUIDDIR)/$$p $(SHAREBINDIR)"; \
	    ln -s $(SUIDDIR)/$$p $(SHAREBINDIR); \
        done; \
	doinstall $(SOURCE_DIR)/share/lib $(LIBDIR) 644 $(INSTALL_LIBS); \
	doinstall $(SOURCE_DIR)/share/man/man1 $(MANDIR)/man1 644 \
		  $(MAN_PAGES); \
	doinstall $(SOURCE_DIR)/doc $(DOCDIR) 644 $(DOC_PAGES)

uninstall: uninstall-bin uninstall-shared

uninstall-bin:
	cd grade; $(MAKE) uninstall

uninstall-shared:
	cd $(SHAREBINDIR); rm -f $(INSTALL_SCRIPTS)
	cd $(SUIDDIR); rm -f $(SUID_SCRIPTS)
	cd $(LIBDIR); rm -f $(INSTALL_LIBS)
	cd $(MANDIR)/man1; rm -f $(MAN_PAGES)

clean:
	-cd grade; \
	 if [ -f Makefile ]; then \
	    $(MAKE) clean; \
	 else \
	    $(MAKE) -f Makefile.in clean; \
	 fi
	find . \( -name '#*' -o -name '*~' -o -name 'core' \) -exec rm -f {} \;
	rm -f $(DISTTAR) $(DISTBASE) $(DISTTAR) $(DISTTARCOMPRESS)

distclean: clean
	-cd grade; \
	 if [ -f Makefile ]; then \
	    $(MAKE) distclean; \
	 else \
	    $(MAKE) -f Makefile.in distclean; \
	 fi
	rm -f Makefile config.status

tar: 
	rm -f $(DISTBASE) $(DISTBASE).tgz $(DISTBASE).tar $(DISTBASE).tar.gz
	@echo "Creating grading-$(VERSION).tgz"
	@if expr "$(SOURCE_DIR)" : "@" > /dev/null; then \
	   ln -s . $(DISTBASE); \
	 else \
	   ln -s $(SOURCE_DIR) $(DISTBASE); \
	fi
	tar cf $(DISTTAR) $(OTHER_DIST:%=$(DISTBASE)/%)
	tar uf $(DISTTAR) $(INSTALL_SCRIPTS:%=$(DISTBASE)/share/bin/%)
	tar uf $(DISTTAR) $(SUID_SCRIPTS:%=$(DISTBASE)/share/bin/suid/%)
	tar uf $(DISTTAR) $(INSTALL_LIBS:%=$(DISTBASE)/share/lib/%)
	tar uf $(DISTTAR) $(MAN_PAGES:%=$(DISTBASE)/share/man/man1/%)
	tar uf $(DISTTAR) $(DOC_PAGES:%=$(DISTBASE)/doc/%)
	tar uf $(DISTTAR) $(SUID_WRAPPER:%=$(DISTBASE)/run-as-class-master/%)
	cd grade; \
	if [ -r Makefile ]; then \
	    $(MAKE) DISTBASE=$(DISTBASE) tar; \
	else \
	    $(MAKE) -f Makefile.in DISTBASE=$(DISTBASE) tar; \
	fi
	$(GZIP) $(DISTTAR)
	mv $(DISTTAR).gz $(DISTTARCOMPRESS)
	rm -f $(DISTBASE)
